{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\BIAssignment\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { useState } from 'react';\nimport { initiateGetResult, initiateLoadMoreAlbums, initiateLoadMorePlaylist, initiateLoadMoreArtists } from '../actions/result';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport SearchResult from './SearchResult';\nimport SearchForm from './SearchForm';\nimport Header from './Header';\nimport Loader from './Loader';\n\nconst Dashboard = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('albums');\n  const {\n    isValidSession,\n    history\n  } = props;\n\n  const handleSearch = searchTerm => {\n    if (isValidSession()) {\n      setIsLoading(true);\n      props.dispatch(initiateGetResult(searchTerm)).then(() => {\n        setIsLoading(false);\n        setSelectedCategory('albums');\n      });\n    } else {\n      history.push({\n        pathname: '/',\n        state: {\n          session_expired: true\n        }\n      });\n    }\n  };\n\n  const loadMore = async type => {\n    if (isValidSession()) {\n      const {\n        dispatch,\n        albums,\n        artists,\n        playlist\n      } = props;\n      setIsLoading(true);\n\n      switch (type) {\n        case 'albums':\n          await dispatch(initiateLoadMoreAlbums(albums.next));\n          break;\n\n        case 'artists':\n          await dispatch(initiateLoadMoreArtists(artists.next));\n          break;\n\n        case 'playlist':\n          await dispatch(initiateLoadMorePlaylist(playlist.next));\n          break;\n\n        default:\n      }\n\n      setIsLoading(false);\n    } else {\n      history.push({\n        pathname: '/',\n        state: {\n          session_expired: true\n        }\n      });\n    }\n  };\n\n  const setCategory = category => {\n    setSelectedCategory(category);\n  };\n\n  const {\n    albums,\n    artists,\n    playlist\n  } = props;\n  const result = {\n    albums,\n    artists,\n    playlist\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, isValidSession() ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SearchForm, {\n    handleSearch: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Loader, {\n    show: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Loading...\"), /*#__PURE__*/React.createElement(SearchResult, {\n    result: result,\n    loadMore: loadMore,\n    setCategory: setCategory,\n    selectedCategory: selectedCategory,\n    isValidSession: isValidSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/',\n      state: {\n        session_expired: true\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    albums: state.albums,\n    artists: state.artists,\n    playlist: state.playlist\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"names":["React","useState","initiateGetResult","initiateLoadMoreAlbums","initiateLoadMorePlaylist","initiateLoadMoreArtists","connect","Redirect","SearchResult","SearchForm","Header","Loader","Dashboard","props","isLoading","setIsLoading","selectedCategory","setSelectedCategory","isValidSession","history","handleSearch","searchTerm","dispatch","then","push","pathname","state","session_expired","loadMore","type","albums","artists","playlist","next","setCategory","category","result","mapStateToProps"],"sources":["C:/Users/Asus/Desktop/BIAssignment/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport {\r\n  initiateGetResult,\r\n  initiateLoadMoreAlbums,\r\n  initiateLoadMorePlaylist,\r\n  initiateLoadMoreArtists\r\n} from '../actions/result';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport SearchResult from './SearchResult';\r\nimport SearchForm from './SearchForm';\r\nimport Header from './Header';\r\nimport Loader from './Loader';\r\n\r\nconst Dashboard = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState('albums');\r\n  const { isValidSession, history } = props;\r\n\r\n  const handleSearch = (searchTerm) => {\r\n    if (isValidSession()) {\r\n      setIsLoading(true);\r\n      props.dispatch(initiateGetResult(searchTerm)).then(() => {\r\n        setIsLoading(false);\r\n        setSelectedCategory('albums');\r\n      });\r\n    } else {\r\n      history.push({\r\n        pathname: '/',\r\n        state: {\r\n          session_expired: true\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const loadMore = async (type) => {\r\n    if (isValidSession()) {\r\n      const { dispatch, albums, artists, playlist } = props;\r\n      setIsLoading(true);\r\n      switch (type) {\r\n        case 'albums':\r\n          await dispatch(initiateLoadMoreAlbums(albums.next));\r\n          break;\r\n        case 'artists':\r\n          await dispatch(initiateLoadMoreArtists(artists.next));\r\n          break;\r\n        case 'playlist':\r\n          await dispatch(initiateLoadMorePlaylist(playlist.next));\r\n          break;\r\n        default:\r\n      }\r\n      setIsLoading(false);\r\n    } else {\r\n      history.push({\r\n        pathname: '/',\r\n        state: {\r\n          session_expired: true\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const setCategory = (category) => {\r\n    setSelectedCategory(category);\r\n  };\r\n\r\n  const { albums, artists, playlist } = props;\r\n  const result = { albums, artists, playlist };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isValidSession() ? (\r\n        <div>\r\n          <Header />\r\n          <SearchForm handleSearch={handleSearch} />\r\n          <Loader show={isLoading}>Loading...</Loader>\r\n          <SearchResult\r\n            result={result}\r\n            loadMore={loadMore}\r\n            setCategory={setCategory}\r\n            selectedCategory={selectedCategory}\r\n            isValidSession={isValidSession}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/',\r\n            state: {\r\n              session_expired: true\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    albums: state.albums,\r\n    artists: state.artists,\r\n    playlist: state.playlist\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SACEC,iBADF,EAEEC,sBAFF,EAGEC,wBAHF,EAIEC,uBAJF,QAKO,mBALP;AAMA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAC3B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACe,gBAAD,EAAmBC,mBAAnB,IAA0ChB,QAAQ,CAAC,QAAD,CAAxD;EACA,MAAM;IAAEiB,cAAF;IAAkBC;EAAlB,IAA8BN,KAApC;;EAEA,MAAMO,YAAY,GAAIC,UAAD,IAAgB;IACnC,IAAIH,cAAc,EAAlB,EAAsB;MACpBH,YAAY,CAAC,IAAD,CAAZ;MACAF,KAAK,CAACS,QAAN,CAAepB,iBAAiB,CAACmB,UAAD,CAAhC,EAA8CE,IAA9C,CAAmD,MAAM;QACvDR,YAAY,CAAC,KAAD,CAAZ;QACAE,mBAAmB,CAAC,QAAD,CAAnB;MACD,CAHD;IAID,CAND,MAMO;MACLE,OAAO,CAACK,IAAR,CAAa;QACXC,QAAQ,EAAE,GADC;QAEXC,KAAK,EAAE;UACLC,eAAe,EAAE;QADZ;MAFI,CAAb;IAMD;EACF,CAfD;;EAiBA,MAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAgB;IAC/B,IAAIX,cAAc,EAAlB,EAAsB;MACpB,MAAM;QAAEI,QAAF;QAAYQ,MAAZ;QAAoBC,OAApB;QAA6BC;MAA7B,IAA0CnB,KAAhD;MACAE,YAAY,CAAC,IAAD,CAAZ;;MACA,QAAQc,IAAR;QACE,KAAK,QAAL;UACE,MAAMP,QAAQ,CAACnB,sBAAsB,CAAC2B,MAAM,CAACG,IAAR,CAAvB,CAAd;UACA;;QACF,KAAK,SAAL;UACE,MAAMX,QAAQ,CAACjB,uBAAuB,CAAC0B,OAAO,CAACE,IAAT,CAAxB,CAAd;UACA;;QACF,KAAK,UAAL;UACE,MAAMX,QAAQ,CAAClB,wBAAwB,CAAC4B,QAAQ,CAACC,IAAV,CAAzB,CAAd;UACA;;QACF;MAVF;;MAYAlB,YAAY,CAAC,KAAD,CAAZ;IACD,CAhBD,MAgBO;MACLI,OAAO,CAACK,IAAR,CAAa;QACXC,QAAQ,EAAE,GADC;QAEXC,KAAK,EAAE;UACLC,eAAe,EAAE;QADZ;MAFI,CAAb;IAMD;EACF,CAzBD;;EA2BA,MAAMO,WAAW,GAAIC,QAAD,IAAc;IAChClB,mBAAmB,CAACkB,QAAD,CAAnB;EACD,CAFD;;EAIA,MAAM;IAAEL,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,IAAgCnB,KAAtC;EACA,MAAMuB,MAAM,GAAG;IAAEN,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,CAAf;EAEA,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGd,cAAc,kBACb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE,oBAAC,UAAD;IAAY,YAAY,EAAEE,YAA1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,eAGE,oBAAC,MAAD;IAAQ,IAAI,EAAEN,SAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAHF,eAIE,oBAAC,YAAD;IACE,MAAM,EAAEsB,MADV;IAEE,QAAQ,EAAER,QAFZ;IAGE,WAAW,EAAEM,WAHf;IAIE,gBAAgB,EAAElB,gBAJpB;IAKE,cAAc,EAAEE,cALlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJF,CADa,gBAcb,oBAAC,QAAD;IACE,EAAE,EAAE;MACFO,QAAQ,EAAE,GADR;MAEFC,KAAK,EAAE;QACLC,eAAe,EAAE;MADZ;IAFL,CADN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAfJ,CADF;AA2BD,CAnFD;;AAqFA,MAAMU,eAAe,GAAIX,KAAD,IAAW;EACjC,OAAO;IACLI,MAAM,EAAEJ,KAAK,CAACI,MADT;IAELC,OAAO,EAAEL,KAAK,CAACK,OAFV;IAGLC,QAAQ,EAAEN,KAAK,CAACM;EAHX,CAAP;AAKD,CAND;;AAQA,eAAe1B,OAAO,CAAC+B,eAAD,CAAP,CAAyBzB,SAAzB,CAAf"},"metadata":{},"sourceType":"module"}